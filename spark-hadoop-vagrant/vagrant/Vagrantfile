# Vagrant fiile configuration for spinning up hadoop-spark cluster
# for training.
# Mainainer: Luis Eduardo Ferro Diez <luisedof10@gmail.com>
# OS: Centos:7
# Hadoop: 3.2.0
# Spark: 2.4.3
# Zeppelin 0.8.1
Vagrant.configure("2") do |config|
	config.hostmanager.enabled = true
	config.vm.box = "centos/7"

	config.vm.define "control", primary: true do |control|
		control.vm.hostname = "control"
		control.vm.network "private_network", ip: "193.168.1.99"

		control.vm.synced_folder "../ansible", "/ansible-playbooks/"
		control.vm.synced_folder "../keys", "/keys/"
		control.vm.synced_folder "../ansible/resources", "/resources/"
		control.vm.synced_folder "../shared/", "/shared/"
		control.vm.provision :shell, path: "../scripts/control_bootstrap.sh"

		control.vm.provider :virtualbox do |v|
		    v.customize ["modifyvm", :id, "--name", "control"]
		end

	end

	# Cluster Machines
	begin
	# Change the number of iterations according to the amount of machines to use
		(1..5).each do |i|
			config.vm.define "node#{i}" do |node|		
				node.vm.hostname = "node#{i}"
				memory = 1024
				# Port forwarding rules

                # HDFS web console
				node.vm.network "forwarded_port", guest: 50070, host: "5007#{i}"
				# Resource Manager
				node.vm.network "forwarded_port", guest: 8088, host: "808#{i}"
				# Map Reduce Job History Server Web App
				node.vm.network "forwarded_port", guest: 19888, host: "1988#{i}"
				# Spark UI
				node.vm.network "forwarded_port", guest: 4040, host: "404#{i}"
				
				# Special configuration for the namenode, i.e., host 1
				if i == 1 then
					# Expose zeppelin's port 8080
					node.vm.network "forwarded_port", guest: 8080, host: "8080"
					# Increase the memory of this host
					memory = 2048
				end
				
				node.vm.network "private_network", ip: "193.168.1.10#{i}"

				node.vm.synced_folder "../keys", "/keys/"
				node.vm.synced_folder "../shared/", "/shared/"
				node.vm.provision :shell, inline: 'cat /keys/control.pub >> /home/vagrant/.ssh/authorized_keys'

				node.vm.provider :virtualbox do |v|
					v.customize ["modifyvm", :id, "--memory", memory]
					v.customize ["modifyvm", :id, "--name", "node#{i}"]
				end
			end
		end
	end

end